
-- AIR_ACTION
ALTER TABLE AIR_ACTION
ADD( ID number );

CREATE SEQUENCE AIR_ACTION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE AIR_ACTION
SET ID = AIR_ACTION_SEQ.nextval;

ALTER TABLE AIR_ACTION DROP PRIMARY KEY;
ALTER TABLE AIR_ACTION ADD CONSTRAINT PKAIR_ACTION PRIMARY KEY( ID );
ALTER TABLE AIR_ACTION ADD CONSTRAINT UCAIR_ACTION UNIQUE ( AVAILABLE_INSTANCE_RESOURCE_ID,ACTION_NAME );

create or replace TRIGGER "CAMAC"."AIR_ACTION_TRG"
BEFORE INSERT ON AIR_ACTION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT AIR_ACTION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- AR_ACTION
ALTER TABLE AR_ACTION
ADD( ID number );

CREATE SEQUENCE AR_ACTION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE AR_ACTION
SET ID = AR_ACTION_SEQ.nextval;

ALTER TABLE AR_ACTION DROP PRIMARY KEY;
ALTER TABLE AR_ACTION ADD CONSTRAINT PKAR_ACTION PRIMARY KEY( ID );
ALTER TABLE AR_ACTION ADD CONSTRAINT UCAR_ACTION UNIQUE ( AVAILABLE_RESOURCE_ID,ACTION_NAME );

create or replace TRIGGER "CAMAC"."AR_ACTION_TRG"
BEFORE INSERT ON AR_ACTION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT AR_ACTION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- ATTACHMENT_EXTENSION_ROLE
ALTER TABLE ATTACHMENT_EXTENSION_ROLE
ADD( ID number );

CREATE SEQUENCE ATTACHMENT_EXTENSION_ROLE_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE ATTACHMENT_EXTENSION_ROLE
SET ID = ATTACHMENT_EXTENSION_ROLE_SEQ.nextval;

ALTER TABLE ATTACHMENT_EXTENSION_ROLE DROP PRIMARY KEY;
ALTER TABLE ATTACHMENT_EXTENSION_ROLE ADD CONSTRAINT PKATTACHMENT_EXTENSION_ROLE PRIMARY KEY( ID );
-- ALTER TABLE ATTACHMENT_EXTENSION_ROLE ADD CONSTRAINT UCATTACHMENT_EXTENSION_ROLE UNIQUE ( ATTACHMENT_EXTENSION_ID,ROLE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."ATTACHMENT_EXTENSION_ROLE_TRG"
BEFORE INSERT ON ATTACHMENT_EXTENSION_ROLE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT ATTACHMENT_EXTENSION_ROLE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- ATTACHMENT_EXTENSION_SERVICE
ALTER TABLE ATTACHMENT_EXTENSION_SERVICE
ADD( ID number );

CREATE SEQUENCE ATT_EXT_SRV_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE ATTACHMENT_EXTENSION_SERVICE
SET ID = ATTACHMENT_EXTENSION_SERVICE_SEQ.nextval;

ALTER TABLE ATTACHMENT_EXTENSION_SERVICE DROP PRIMARY KEY;
ALTER TABLE ATTACHMENT_EXTENSION_SERVICE ADD CONSTRAINT PKATTACHMENT_EXTENSION_SERVICE PRIMARY KEY( ID );
-- ALTER TABLE ATTACHMENT_EXTENSION_SERVICE ADD CONSTRAINT UCATTACHMENT_EXTENSION_SERVICE UNIQUE ( ATTACHMENT_EXTENSION_ID,SERVICE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."ATT_EXT_SER_TRG"
BEFORE INSERT ON ATTACHMENT_EXTENSION_SERVICE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT ATT_EXT_SRV_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- ATTACHMENT_SECTION_ROLE
ALTER TABLE ATTACHMENT_SECTION_ROLE
ADD( ID number );

CREATE SEQUENCE ATTACHMENT_SECTION_ROLE_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE ATTACHMENT_SECTION_ROLE
SET ID = ATTACHMENT_SECTION_ROLE_SEQ.nextval;

ALTER TABLE ATTACHMENT_SECTION_ROLE DROP PRIMARY KEY;
ALTER TABLE ATTACHMENT_SECTION_ROLE ADD CONSTRAINT PKATTACHMENT_SECTION_ROLE PRIMARY KEY( ID );
-- ALTER TABLE ATTACHMENT_SECTION_ROLE ADD CONSTRAINT UCATTACHMENT_SECTION_ROLE UNIQUE ( ATTACHMENT_SECTION_ID,ROLE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."ATTACHMENT_SECTION_ROLE_TRG"
BEFORE INSERT ON ATTACHMENT_SECTION_ROLE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT ATTACHMENT_SECTION_ROLE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- ATTACHMENT_SECTION_SERVICE
ALTER TABLE ATTACHMENT_SECTION_SERVICE
ADD( ID number );

CREATE SEQUENCE ATTACHMENT_SECTION_SERVICE_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE ATTACHMENT_SECTION_SERVICE
SET ID = ATTACHMENT_SECTION_SERVICE_SEQ.nextval;

ALTER TABLE ATTACHMENT_SECTION_SERVICE DROP PRIMARY KEY;
ALTER TABLE ATTACHMENT_SECTION_SERVICE ADD CONSTRAINT PKATTACHMENT_SECTION_SERVICE PRIMARY KEY( ID );
-- ALTER TABLE ATTACHMENT_SECTION_SERVICE ADD CONSTRAINT UCATTACHMENT_SECTION_SERVICE UNIQUE ( ATTACHMENT_SECTION_ID,SERVICE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."ATT_SEC_SER_TRG"
BEFORE INSERT ON ATTACHMENT_SECTION_SERVICE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT ATTACHMENT_SECTION_SERVICE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- AUTHORITY_AUTHORITY_TYPE
ALTER TABLE AUTHORITY_AUTHORITY_TYPE
ADD( ID number );

CREATE SEQUENCE AUTHORITY_AUTHORITY_TYPE_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE AUTHORITY_AUTHORITY_TYPE
SET ID = AUTHORITY_AUTHORITY_TYPE_SEQ.nextval;

ALTER TABLE AUTHORITY_AUTHORITY_TYPE DROP PRIMARY KEY;
ALTER TABLE AUTHORITY_AUTHORITY_TYPE ADD CONSTRAINT PKAUTHORITY_AUTHORITY_TYPE PRIMARY KEY( ID );
ALTER TABLE AUTHORITY_AUTHORITY_TYPE ADD CONSTRAINT UCAUTHORITY_AUTHORITY_TYPE UNIQUE ( AUTHORITY_ID,AUTHORITY_TYPE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."AUTH_AUTH_TYPE_TRG"
BEFORE INSERT ON AUTHORITY_AUTHORITY_TYPE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT AUTHORITY_AUTHORITY_TYPE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- AUTHORITY_LOCATION
ALTER TABLE AUTHORITY_LOCATION
ADD( ID number );

CREATE SEQUENCE AUTHORITY_LOCATION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE AUTHORITY_LOCATION
SET ID = AUTHORITY_LOCATION_SEQ.nextval;

ALTER TABLE AUTHORITY_LOCATION DROP PRIMARY KEY;
ALTER TABLE AUTHORITY_LOCATION ADD CONSTRAINT PKAUTHORITY_LOCATION PRIMARY KEY( ID );
ALTER TABLE AUTHORITY_LOCATION ADD CONSTRAINT UCAUTHORITY_LOCATION UNIQUE ( AUTHORITY_ID,LOCATION_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."AUTH_LOCATION_TRG"
BEFORE INSERT ON AUTHORITY_LOCATION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT AUTHORITY_LOCATION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- B_GROUP_ACL
ALTER TABLE B_GROUP_ACL
ADD( ID number );

CREATE SEQUENCE B_GROUP_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE B_GROUP_ACL
SET ID = B_GROUP_ACL_SEQ.nextval;

ALTER TABLE B_GROUP_ACL DROP PRIMARY KEY;
ALTER TABLE B_GROUP_ACL ADD CONSTRAINT PKB_GROUP_ACL PRIMARY KEY( ID );
ALTER TABLE B_GROUP_ACL ADD CONSTRAINT UCB_GROUP_ACL UNIQUE ( BUTTON_ID,GROUP_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."B_GROUP_ACL_TRG"
BEFORE INSERT ON B_GROUP_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT B_GROUP_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- B_ROLE_ACL
ALTER TABLE B_ROLE_ACL
ADD( ID number );

CREATE SEQUENCE B_ROLE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE B_ROLE_ACL
SET ID = B_ROLE_ACL_SEQ.nextval;

ALTER TABLE B_ROLE_ACL DROP PRIMARY KEY;
ALTER TABLE B_ROLE_ACL ADD CONSTRAINT PKB_ROLE_ACL PRIMARY KEY( ID );
ALTER TABLE B_ROLE_ACL ADD CONSTRAINT UCB_ROLE_ACL UNIQUE ( BUTTON_ID,ROLE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."B_ROLE_ACL_TRG"
BEFORE INSERT ON B_ROLE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT B_ROLE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- B_SERVICE_ACL
ALTER TABLE B_SERVICE_ACL
ADD( ID number );

CREATE SEQUENCE B_SERVICE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE B_SERVICE_ACL
SET ID = B_SERVICE_ACL_SEQ.nextval;

ALTER TABLE B_SERVICE_ACL DROP PRIMARY KEY;
ALTER TABLE B_SERVICE_ACL ADD CONSTRAINT PKB_SERVICE_ACL PRIMARY KEY( ID );
ALTER TABLE B_SERVICE_ACL ADD CONSTRAINT UCB_SERVICE_ACL UNIQUE ( BUTTON_ID,SERVICE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."B_SERVICE_ACL_TRG"
BEFORE INSERT ON B_SERVICE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT B_SERVICE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- B_USER_ACL
ALTER TABLE B_USER_ACL
ADD( ID number );

CREATE SEQUENCE B_USER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE B_USER_ACL
SET ID = B_USER_ACL_SEQ.nextval;

ALTER TABLE B_USER_ACL DROP PRIMARY KEY;
ALTER TABLE B_USER_ACL ADD CONSTRAINT PKB_USER_ACL PRIMARY KEY( ID );
ALTER TABLE B_USER_ACL ADD CONSTRAINT UCB_USER_ACL UNIQUE ( BUTTON_ID,USER_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."B_USER_ACL_TRG"
BEFORE INSERT ON B_USER_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT B_USER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

ALTER TABLE CHAPTER_PAGE
ADD( ID number );

CREATE SEQUENCE CHAPTER_PAGE_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE CHAPTER_PAGE
SET ID = CHAPTER_PAGE_SEQ.nextval;

-- ALTER TABLE CHAPTER_PAGE DROP PRIMARY KEY;
ALTER TABLE CHAPTER_PAGE ADD CONSTRAINT UCCHAPTER_PAGE UNIQUE ( ID );
-- ALTER TABLE CHAPTER_PAGE ADD CONSTRAINT UCCHAPTER_PAGE UNIQUE ( CHAPTER_ID,PAGE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."CHAPTER_PAGE_TRG"
BEFORE INSERT ON CHAPTER_PAGE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT CHAPTER_PAGE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

ALTER TABLE CHAPTER_PAGE_GROUP_ACL
ADD( ID number );

CREATE SEQUENCE CHAPTER_PAGE_GROUP_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE CHAPTER_PAGE_GROUP_ACL
SET ID = CHAPTER_PAGE_GROUP_ACL_SEQ.nextval;

ALTER TABLE CHAPTER_PAGE_GROUP_ACL DROP PRIMARY KEY;
ALTER TABLE CHAPTER_PAGE_GROUP_ACL ADD CONSTRAINT PKCHAPTER_PAGE_GROUP_ACL PRIMARY KEY( ID );
ALTER TABLE CHAPTER_PAGE_GROUP_ACL ADD CONSTRAINT UCCHAPTER_PAGE_GROUP_ACL UNIQUE ( CHAPTER_ID,PAGE_ID,GROUP_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."CHA_PAGE_GR_ACL_TRG"
BEFORE INSERT ON CHAPTER_PAGE_GROUP_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT CHAPTER_PAGE_GROUP_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- CHAPTER_PAGE_ROLE_ACL
ALTER TABLE CHAPTER_PAGE_ROLE_ACL
ADD( ID number );

CREATE SEQUENCE CHAPTER_PAGE_ROLE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE CHAPTER_PAGE_ROLE_ACL
SET ID = CHAPTER_PAGE_ROLE_ACL_SEQ.nextval;

ALTER TABLE CHAPTER_PAGE_ROLE_ACL DROP PRIMARY KEY;
ALTER TABLE CHAPTER_PAGE_ROLE_ACL ADD CONSTRAINT PKCHAPTER_PAGE_ROLE_ACL PRIMARY KEY( ID );
ALTER TABLE CHAPTER_PAGE_ROLE_ACL ADD CONSTRAINT UCCHAPTER_PAGE_ROLE_ACL UNIQUE ( CHAPTER_ID,PAGE_ID,ROLE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."CHA_PAGE_ROLE_ACL_TRG"
BEFORE INSERT ON CHAPTER_PAGE_ROLE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT CHAPTER_PAGE_ROLE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- CHAPTER_PAGE_SERVICE_ACL
ALTER TABLE CHAPTER_PAGE_SERVICE_ACL
ADD( ID number );

CREATE SEQUENCE CHAPTER_PAGE_SERVICE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE CHAPTER_PAGE_SERVICE_ACL
SET ID = CHAPTER_PAGE_SERVICE_ACL_SEQ.nextval;

ALTER TABLE CHAPTER_PAGE_SERVICE_ACL DROP PRIMARY KEY;
ALTER TABLE CHAPTER_PAGE_SERVICE_ACL ADD CONSTRAINT PKCHAPTER_PAGE_SERVICE_ACL PRIMARY KEY( ID );
ALTER TABLE CHAPTER_PAGE_SERVICE_ACL ADD CONSTRAINT UCCHAPTER_PAGE_SERVICE_ACL UNIQUE ( CHAPTER_ID,PAGE_ID,SERVICE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."CHAPTER_PAGE_SERVICE_ACL_TRG"
BEFORE INSERT ON CHAPTER_PAGE_SERVICE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT CHAPTER_PAGE_SERVICE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- CHAPTER_PAGE_USER_ACL
ALTER TABLE CHAPTER_PAGE_USER_ACL
ADD( ID number );

CREATE SEQUENCE CHAPTER_PAGE_USER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE CHAPTER_PAGE_USER_ACL
SET ID = CHAPTER_PAGE_USER_ACL_SEQ.nextval;

ALTER TABLE CHAPTER_PAGE_USER_ACL DROP PRIMARY KEY;
ALTER TABLE CHAPTER_PAGE_USER_ACL ADD CONSTRAINT PKCHAPTER_PAGE_USER_ACL PRIMARY KEY( ID );
ALTER TABLE CHAPTER_PAGE_USER_ACL ADD CONSTRAINT UCCHAPTER_PAGE_USER_ACL UNIQUE ( CHAPTER_ID,PAGE_ID,USER_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."CHA_PAGE_USER_ACL_TRG"
BEFORE INSERT ON CHAPTER_PAGE_USER_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT CHAPTER_PAGE_USER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- DOCGEN_ACTIVATIONACTION_ACTION
ALTER TABLE DOCGEN_ACTIVATIONACTION_ACTION
ADD( ID number );

CREATE SEQUENCE DOCGEN_ACT_ACTION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE DOCGEN_ACTIVATIONACTION_ACTION
SET ID = DOCGEN_ACT_ACTION_SEQ.nextval;

-- ALTER TABLE DOCGEN_ACTIVATIONACTION_ACTION DROP PRIMARY KEY;
ALTER TABLE DOCGEN_ACTIVATIONACTION_ACTION ADD CONSTRAINT PKDOCGEN_ACT_ACTION PRIMARY KEY( ID );
ALTER TABLE DOCGEN_ACTIVATIONACTION_ACTION ADD CONSTRAINT UCDOCGEN_ACT_ACTION UNIQUE ( DOCGEN_ACTIVATION_ACTION_ID,ACTION_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."DOCGEN_ACT_ACTION_TRG"
BEFORE INSERT ON DOCGEN_ACTIVATIONACTION_ACTION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT DOCGEN_ACT_ACTION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- DOCGEN_DOCX_ACTION
ALTER TABLE DOCGEN_DOCX_ACTION
ADD( ID number );

CREATE SEQUENCE DOCGEN_DOCX_ACTION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE DOCGEN_DOCX_ACTION
SET ID = DOCGEN_DOCX_ACTION_SEQ.nextval;

ALTER TABLE DOCGEN_DOCX_ACTION DROP PRIMARY KEY;
ALTER TABLE DOCGEN_DOCX_ACTION ADD CONSTRAINT PKDOCGEN_DOCX_ACTION PRIMARY KEY( ID );
ALTER TABLE DOCGEN_DOCX_ACTION ADD CONSTRAINT UCDOCGEN_DOCX_ACTION UNIQUE ( DOCGEN_TEMPLATE_ID,DOCGEN_TEMPLATE_CLASS_ID,ACTION_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."DOCGEN_DOCX_ACTION_TRG"
BEFORE INSERT ON DOCGEN_DOCX_ACTION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT DOCGEN_DOCX_ACTION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- DOCGEN_PDF_ACTION
ALTER TABLE DOCGEN_PDF_ACTION
ADD( ID number );

CREATE SEQUENCE DOCGEN_PDF_ACTION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE DOCGEN_PDF_ACTION
SET ID = DOCGEN_PDF_ACTION_SEQ.nextval;

ALTER TABLE DOCGEN_PDF_ACTION DROP PRIMARY KEY;
ALTER TABLE DOCGEN_PDF_ACTION ADD CONSTRAINT PKDOCGEN_PDF_ACTION PRIMARY KEY( ID );
ALTER TABLE DOCGEN_PDF_ACTION ADD CONSTRAINT UCDOCGEN_PDF_ACTION UNIQUE ( DOCGEN_TEMPLATE_ID,DOCGEN_TEMPLATE_CLASS_ID,ACTION_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."DOCGEN_PDF_ACTION_TRG"
BEFORE INSERT ON DOCGEN_PDF_ACTION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT DOCGEN_PDF_ACTION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- GROUP_LOCATION
ALTER TABLE GROUP_LOCATION
ADD( ID number );

CREATE SEQUENCE GROUP_LOCATION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE GROUP_LOCATION
SET ID = GROUP_LOCATION_SEQ.nextval;

ALTER TABLE GROUP_LOCATION DROP PRIMARY KEY;
ALTER TABLE GROUP_LOCATION ADD CONSTRAINT PKGROUP_LOCATION PRIMARY KEY( ID );
ALTER TABLE GROUP_LOCATION ADD CONSTRAINT UCGROUP_LOCATION UNIQUE ( GROUP_ID,LOCATION_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."GROUP_LOCATION_TRG"
BEFORE INSERT ON GROUP_LOCATION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT GROUP_LOCATION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- INSTANCE_RESOURCE_ACTION
ALTER TABLE INSTANCE_RESOURCE_ACTION
ADD( ID number );

CREATE SEQUENCE INSTANCE_RESOURCE_ACTION_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE INSTANCE_RESOURCE_ACTION
SET ID = INSTANCE_RESOURCE_ACTION_SEQ.nextval;

ALTER TABLE INSTANCE_RESOURCE_ACTION DROP PRIMARY KEY;
ALTER TABLE INSTANCE_RESOURCE_ACTION ADD CONSTRAINT PKINSTANCE_RESOURCE_ACTION PRIMARY KEY( ID );
ALTER TABLE INSTANCE_RESOURCE_ACTION ADD CONSTRAINT UCINSTANCE_RESOURCE_ACTION UNIQUE ( AVAILABLE_INSTANCE_RESOURCE_ID,AVAILABLE_ACTION_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."INSTANCE_RESOURCE_ACTION_TRG"
BEFORE INSERT ON INSTANCE_RESOURCE_ACTION
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT INSTANCE_RESOURCE_ACTION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- IR_GROUP_ACL
ALTER TABLE IR_GROUP_ACL
ADD( ID number );

CREATE SEQUENCE IR_GROUP_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE IR_GROUP_ACL
SET ID = IR_GROUP_ACL_SEQ.nextval;

ALTER TABLE IR_GROUP_ACL DROP PRIMARY KEY;
ALTER TABLE IR_GROUP_ACL ADD CONSTRAINT PKIR_GROUP_ACL PRIMARY KEY( ID );
ALTER TABLE IR_GROUP_ACL ADD CONSTRAINT UCIR_GROUP_ACL UNIQUE ( INSTANCE_RESOURCE_ID,GROUP_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."IR_GROUP_ACL_TRG"
BEFORE INSERT ON IR_GROUP_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT IR_GROUP_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- IR_ROLE_ACL
ALTER TABLE IR_ROLE_ACL
ADD( ID number );

CREATE SEQUENCE IR_ROLE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE IR_ROLE_ACL
SET ID = IR_ROLE_ACL_SEQ.nextval;

ALTER TABLE IR_ROLE_ACL DROP PRIMARY KEY;
ALTER TABLE IR_ROLE_ACL ADD CONSTRAINT PKIR_ROLE_ACL PRIMARY KEY( ID );
ALTER TABLE IR_ROLE_ACL ADD CONSTRAINT UCIR_ROLE_ACL UNIQUE ( INSTANCE_RESOURCE_ID,ROLE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."IR_ROLE_ACL_TRG"
BEFORE INSERT ON IR_ROLE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT IR_ROLE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- IR_SERVICE_ACL
ALTER TABLE IR_SERVICE_ACL
ADD( ID number );

CREATE SEQUENCE IR_SERVICE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE IR_SERVICE_ACL
SET ID = IR_SERVICE_ACL_SEQ.nextval;

ALTER TABLE IR_SERVICE_ACL DROP PRIMARY KEY;
ALTER TABLE IR_SERVICE_ACL ADD CONSTRAINT PKIR_SERVICE_ACL PRIMARY KEY( ID );
ALTER TABLE IR_SERVICE_ACL ADD CONSTRAINT UCIR_SERVICE_ACL UNIQUE ( INSTANCE_RESOURCE_ID,SERVICE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."IR_SERVICE_ACL_TRG"
BEFORE INSERT ON IR_SERVICE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT IR_SERVICE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- IR_USER_ACL
ALTER TABLE IR_USER_ACL
ADD( ID number );

CREATE SEQUENCE IR_USER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE IR_USER_ACL
SET ID = IR_USER_ACL_SEQ.nextval;

ALTER TABLE IR_USER_ACL DROP PRIMARY KEY;
ALTER TABLE IR_USER_ACL ADD CONSTRAINT PKIR_USER_ACL PRIMARY KEY( ID );
ALTER TABLE IR_USER_ACL ADD CONSTRAINT UCIR_USER_ACL UNIQUE ( INSTANCE_RESOURCE_ID,USER_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."IR_USER_ACL_TRG"
BEFORE INSERT ON IR_USER_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT IR_USER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- PAGE_FORM
ALTER TABLE PAGE_FORM
ADD( ID number );

CREATE SEQUENCE PAGE_FORM_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE PAGE_FORM
SET ID = PAGE_FORM_SEQ.nextval;

-- ALTER TABLE PAGE_FORM DROP PRIMARY KEY;
ALTER TABLE PAGE_FORM ADD CONSTRAINT PKPAGE_FORM UNIQUE ( ID );
-- ALTER TABLE PAGE_FORM ADD CONSTRAINT UCPAGE_FORM UNIQUE ( PAGE_ID,FORM_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."PAGE_FORM_TRG"
BEFORE INSERT ON PAGE_FORM
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT PAGE_FORM_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- PAGE_FORM_GROUP_ACL
ALTER TABLE PAGE_FORM_GROUP_ACL
ADD( ID number );

CREATE SEQUENCE PAGE_FORM_GROUP_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE PAGE_FORM_GROUP_ACL
SET ID = PAGE_FORM_GROUP_ACL_SEQ.nextval;

ALTER TABLE PAGE_FORM_GROUP_ACL DROP PRIMARY KEY;
ALTER TABLE PAGE_FORM_GROUP_ACL ADD CONSTRAINT PKPAGE_FORM_GROUP_ACL PRIMARY KEY( ID );
ALTER TABLE PAGE_FORM_GROUP_ACL ADD CONSTRAINT UCPAGE_FORM_GROUP_ACL UNIQUE ( PAGE_ID,FORM_ID,GROUP_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."PAGE_FORM_GROUP_ACL_TRG"
BEFORE INSERT ON PAGE_FORM_GROUP_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT PAGE_FORM_GROUP_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- PAGE_FORM_ROLE_ACL
ALTER TABLE PAGE_FORM_ROLE_ACL
ADD( ID number );

CREATE SEQUENCE PAGE_FORM_ROLE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE PAGE_FORM_ROLE_ACL
SET ID = PAGE_FORM_ROLE_ACL_SEQ.nextval;

ALTER TABLE PAGE_FORM_ROLE_ACL DROP PRIMARY KEY;
ALTER TABLE PAGE_FORM_ROLE_ACL ADD CONSTRAINT PKPAGE_FORM_ROLE_ACL PRIMARY KEY( ID );
ALTER TABLE PAGE_FORM_ROLE_ACL ADD CONSTRAINT UCPAGE_FORM_ROLE_ACL UNIQUE ( PAGE_ID,FORM_ID,ROLE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."PAGE_FORM_ROLE_ACL_TRG"
BEFORE INSERT ON PAGE_FORM_ROLE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT PAGE_FORM_ROLE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- PAGE_FORM_SERVICE_ACL
ALTER TABLE PAGE_FORM_SERVICE_ACL
ADD( ID number );

CREATE SEQUENCE PAGE_FORM_SERVICE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE PAGE_FORM_SERVICE_ACL
SET ID = PAGE_FORM_SERVICE_ACL_SEQ.nextval;

ALTER TABLE PAGE_FORM_SERVICE_ACL DROP PRIMARY KEY;
ALTER TABLE PAGE_FORM_SERVICE_ACL ADD CONSTRAINT PKPAGE_FORM_SERVICE_ACL PRIMARY KEY( ID );
ALTER TABLE PAGE_FORM_SERVICE_ACL ADD CONSTRAINT UCPAGE_FORM_SERVICE_ACL UNIQUE ( PAGE_ID,FORM_ID,SERVICE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."PAGE_FORM_SERVICE_ACL_TRG"
BEFORE INSERT ON PAGE_FORM_SERVICE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT PAGE_FORM_SERVICE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- PAGE_FORM_USER_ACL
ALTER TABLE PAGE_FORM_USER_ACL
ADD( ID number );

CREATE SEQUENCE PAGE_FORM_USER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE PAGE_FORM_USER_ACL
SET ID = PAGE_FORM_USER_ACL_SEQ.nextval;

ALTER TABLE PAGE_FORM_USER_ACL DROP PRIMARY KEY;
ALTER TABLE PAGE_FORM_USER_ACL ADD CONSTRAINT PKPAGE_FORM_USER_ACL PRIMARY KEY( ID );
ALTER TABLE PAGE_FORM_USER_ACL ADD CONSTRAINT UCPAGE_FORM_USER_ACL UNIQUE ( PAGE_ID,FORM_ID,USER_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."PAGE_FORM_USER_ACL_TRG"
BEFORE INSERT ON PAGE_FORM_USER_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT PAGE_FORM_USER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- QUESTION_CHAPTER
ALTER TABLE QUESTION_CHAPTER
ADD( ID number );

CREATE SEQUENCE QUESTION_CHAPTER_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE QUESTION_CHAPTER
SET ID = QUESTION_CHAPTER_SEQ.nextval;

-- ALTER TABLE QUESTION_CHAPTER DROP PRIMARY KEY;
ALTER TABLE QUESTION_CHAPTER ADD CONSTRAINT PKQUESTION_CHAPTER UNIQUE ( ID );
-- ALTER TABLE QUESTION_CHAPTER ADD CONSTRAINT UCQUESTION_CHAPTER UNIQUE ( QUESTION_ID,CHAPTER_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."QUESTION_CHAPTER_TRG"
BEFORE INSERT ON QUESTION_CHAPTER
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT QUESTION_CHAPTER_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- QUESTION_CHAPTER_GROUP_ACL
ALTER TABLE QUESTION_CHAPTER_GROUP_ACL
ADD( ID number );

CREATE SEQUENCE QUESTION_CHAPTER_GROUP_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE QUESTION_CHAPTER_GROUP_ACL
SET ID = QUESTION_CHAPTER_GROUP_ACL_SEQ.nextval;

ALTER TABLE QUESTION_CHAPTER_GROUP_ACL DROP PRIMARY KEY;
ALTER TABLE QUESTION_CHAPTER_GROUP_ACL ADD CONSTRAINT PKQUESTION_CHAPTER_GROUP_ACL PRIMARY KEY( ID );
ALTER TABLE QUESTION_CHAPTER_GROUP_ACL ADD CONSTRAINT UCQUESTION_CHAPTER_GROUP_ACL UNIQUE ( QUESTION_ID,CHAPTER_ID,GROUP_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."QUESTION_CHA_GR_ACL_TRG"
BEFORE INSERT ON QUESTION_CHAPTER_GROUP_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT QUESTION_CHAPTER_GROUP_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- QUESTION_CHAPTER_ROLE_ACL
ALTER TABLE QUESTION_CHAPTER_ROLE_ACL
ADD( ID number );

CREATE SEQUENCE QUESTION_CHAPTER_ROLE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE QUESTION_CHAPTER_ROLE_ACL
SET ID = QUESTION_CHAPTER_ROLE_ACL_SEQ.nextval;

ALTER TABLE QUESTION_CHAPTER_ROLE_ACL DROP PRIMARY KEY;
ALTER TABLE QUESTION_CHAPTER_ROLE_ACL ADD CONSTRAINT PKQUESTION_CHAPTER_ROLE_ACL PRIMARY KEY( ID );
ALTER TABLE QUESTION_CHAPTER_ROLE_ACL ADD CONSTRAINT UCQUESTION_CHAPTER_ROLE_ACL UNIQUE ( QUESTION_ID,CHAPTER_ID,ROLE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."QUESTION_CHAPTER_ROLE_ACL_TRG"
BEFORE INSERT ON QUESTION_CHAPTER_ROLE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT QUESTION_CHAPTER_ROLE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- QUESTION_CHAPTER_SERVICE_ACL
ALTER TABLE QUESTION_CHAPTER_SERVICE_ACL
ADD( ID number );

CREATE SEQUENCE QUESTION_CHAPTER_SER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE QUESTION_CHAPTER_SERVICE_ACL
SET ID = QUESTION_CHAPTER_SER_ACL_SEQ.nextval;

ALTER TABLE QUESTION_CHAPTER_SERVICE_ACL DROP PRIMARY KEY;
ALTER TABLE QUESTION_CHAPTER_SERVICE_ACL ADD CONSTRAINT PKQUESTION_CHAPTER_SER_ACL PRIMARY KEY( ID );
ALTER TABLE QUESTION_CHAPTER_SERVICE_ACL ADD CONSTRAINT UCQUESTION_CHAPTER_SER_ACL UNIQUE ( QUESTION_ID,CHAPTER_ID,SERVICE_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."QUESTION_CHAPTER_SER_ACL_TRG"
BEFORE INSERT ON QUESTION_CHAPTER_SERVICE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT QUESTION_CHAPTER_SER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- QUESTION_CHAPTER_USER_ACL
ALTER TABLE QUESTION_CHAPTER_USER_ACL
ADD( ID number );

CREATE SEQUENCE QUESTION_CHAPTER_USER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE QUESTION_CHAPTER_USER_ACL
SET ID = QUESTION_CHAPTER_USER_ACL_SEQ.nextval;

ALTER TABLE QUESTION_CHAPTER_USER_ACL DROP PRIMARY KEY;
ALTER TABLE QUESTION_CHAPTER_USER_ACL ADD CONSTRAINT PKQUESTION_CHAPTER_USER_ACL PRIMARY KEY( ID );
ALTER TABLE QUESTION_CHAPTER_USER_ACL ADD CONSTRAINT UCQUESTION_CHAPTER_USER_ACL UNIQUE ( QUESTION_ID,CHAPTER_ID,USER_ID,INSTANCE_STATE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."QUESTION_CHAPTER_USER_ACL_TRG"
BEFORE INSERT ON QUESTION_CHAPTER_USER_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT QUESTION_CHAPTER_USER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- R_GROUP_ACL
ALTER TABLE R_GROUP_ACL
ADD( ID number );

CREATE SEQUENCE R_GROUP_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE R_GROUP_ACL
SET ID = R_GROUP_ACL_SEQ.nextval;

ALTER TABLE R_GROUP_ACL DROP PRIMARY KEY;
ALTER TABLE R_GROUP_ACL ADD CONSTRAINT PKR_GROUP_ACL PRIMARY KEY( ID );
ALTER TABLE R_GROUP_ACL ADD CONSTRAINT UCR_GROUP_ACL UNIQUE ( RESOURCE_ID,GROUP_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."R_GROUP_ACL_TRG"
BEFORE INSERT ON R_GROUP_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT R_GROUP_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- R_ROLE_ACL
ALTER TABLE R_ROLE_ACL
ADD( ID number );

CREATE SEQUENCE R_ROLE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE R_ROLE_ACL
SET ID = R_ROLE_ACL_SEQ.nextval;

ALTER TABLE R_ROLE_ACL DROP PRIMARY KEY;
ALTER TABLE R_ROLE_ACL ADD CONSTRAINT PKR_ROLE_ACL PRIMARY KEY( ID );
ALTER TABLE R_ROLE_ACL ADD CONSTRAINT UCR_ROLE_ACL UNIQUE ( RESOURCE_ID,ROLE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."R_ROLE_ACL_TRG"
BEFORE INSERT ON R_ROLE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT R_ROLE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- R_SERVICE_ACL
ALTER TABLE R_SERVICE_ACL
ADD( ID number );

CREATE SEQUENCE R_SERVICE_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE R_SERVICE_ACL
SET ID = R_SERVICE_ACL_SEQ.nextval;

ALTER TABLE R_SERVICE_ACL DROP PRIMARY KEY;
ALTER TABLE R_SERVICE_ACL ADD CONSTRAINT PKR_SERVICE_ACL PRIMARY KEY( ID );
ALTER TABLE R_SERVICE_ACL ADD CONSTRAINT UCR_SERVICE_ACL UNIQUE ( RESOURCE_ID,SERVICE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."R_SERVICE_ACL_TRG"
BEFORE INSERT ON R_SERVICE_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT R_SERVICE_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- R_USER_ACL
ALTER TABLE R_USER_ACL
ADD( ID number );

CREATE SEQUENCE R_USER_ACL_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE R_USER_ACL
SET ID = R_USER_ACL_SEQ.nextval;

ALTER TABLE R_USER_ACL DROP PRIMARY KEY;
ALTER TABLE R_USER_ACL ADD CONSTRAINT PKR_USER_ACL PRIMARY KEY( ID );
ALTER TABLE R_USER_ACL ADD CONSTRAINT UCR_USER_ACL UNIQUE ( RESOURCE_ID,USER_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."R_USER_ACL_TRG"
BEFORE INSERT ON R_USER_ACL
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT R_USER_ACL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- USER_GROUP
ALTER TABLE USER_GROUP
ADD( ID number );

CREATE SEQUENCE USER_GROUP_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE USER_GROUP
SET ID = USER_GROUP_SEQ.nextval;

ALTER TABLE USER_GROUP DROP PRIMARY KEY;
ALTER TABLE USER_GROUP ADD CONSTRAINT PKUSER_GROUP PRIMARY KEY( ID );
ALTER TABLE USER_GROUP ADD CONSTRAINT UCUSER_GROUP UNIQUE ( USER_ID,GROUP_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."USER_GROUP_TRG"
BEFORE INSERT ON USER_GROUP
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT USER_GROUP_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- WORKFLOW_ROLE
ALTER TABLE WORKFLOW_ROLE
ADD( ID number );

CREATE SEQUENCE WORKFLOW_ROLE_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE WORKFLOW_ROLE
SET ID = WORKFLOW_ROLE_SEQ.nextval;

ALTER TABLE WORKFLOW_ROLE DROP PRIMARY KEY;
ALTER TABLE WORKFLOW_ROLE ADD CONSTRAINT PKWORKFLOW_ROLE PRIMARY KEY( ID );
ALTER TABLE WORKFLOW_ROLE ADD CONSTRAINT UCWORKFLOW_ROLE UNIQUE ( WORKFLOW_ITEM_ID,ROLE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."WORKFLOW_ROLE_TRG"
BEFORE INSERT ON WORKFLOW_ROLE
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT WORKFLOW_ROLE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

-- FORM_GROUP_FORM
ALTER TABLE FORM_GROUP_FORM
ADD( ID number );

CREATE SEQUENCE FORM_GROUP_FORM_SEQ
START WITH 1
INCREMENT BY 1
CACHE 20;

UPDATE FORM_GROUP_FORM
SET ID = FORM_GROUP_FORM_SEQ.nextval;

ALTER TABLE FORM_GROUP_FORM DROP CONSTRAINT PKFORM_GROUP_FORM;
ALTER TABLE FORM_GROUP_FORM ADD CONSTRAINT PKFORM_GROUP_FORM PRIMARY KEY( ID );

CREATE OR REPLACE TRIGGER "CAMAC"."FORM_GROUP_FORM_TRG"
BEFORE INSERT ON FORM_GROUP_FORM
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.ID IS NULL THEN
SELECT FORM_GROUP_FORM_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/

