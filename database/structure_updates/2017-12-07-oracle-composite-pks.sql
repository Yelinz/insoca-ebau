-- INSTANCE_LOCATION
ALTER TABLE INSTANCE_LOCATION
  ADD( ID number );

CREATE SEQUENCE INSTANCE_LOCATION_SEQ
  START WITH 1
  INCREMENT BY 1
  CACHE 20;

UPDATE INSTANCE_LOCATION
  SET ID = INSTANCE_LOCATION_SEQ.nextval;

ALTER TABLE INSTANCE_LOCATION DROP PRIMARY KEY;
ALTER TABLE INSTANCE_LOCATION ADD CONSTRAINT PKINSTANCELOCATION PRIMARY KEY( ID );
ALTER TABLE INSTANCE_LOCATION ADD CONSTRAINT UCINSTANCELOCATION UNIQUE ( LOCATION_ID, INSTANCE_ID );

CREATE OR REPLACE TRIGGER "CAMAC"."INSTANCE_LOCATION_TRG"
BEFORE INSERT ON INSTANCE_LOCATION
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT INSTANCE_LOCATION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


-- ANSWER
ALTER TABLE ANSWER
  ADD( ID number );

CREATE SEQUENCE ANSWER_SEQ
  START WITH 1
  INCREMENT BY 1
  CACHE 20;

UPDATE ANSWER
  SET ID = ANSWER_SEQ.nextval;

ALTER TABLE ANSWER DROP PRIMARY KEY;
ALTER TABLE ANSWER ADD CONSTRAINT PKANSWER PRIMARY KEY( ID );
ALTER TABLE ANSWER ADD CONSTRAINT UCANSWER UNIQUE ( INSTANCE_ID, QUESTION_ID, CHAPTER_ID, ITEM );

CREATE OR REPLACE TRIGGER "CAMAC"."ANSWER_TRG"
BEFORE INSERT ON ANSWER
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ANSWER_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
